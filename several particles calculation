import numpy as np
'''
import csv
from itertools import zip_longest
'''

filename = 'C:/Users/17.3 Active Systems/Desktop/example2.txt'
displ_file = 'C:/Users/17.3 Active Systems/Desktop/calculation/displ.txt'
#csv_d = 'C:/Users/17.3 Active Systems/Desktop/calculation/displ.csv'

# Parameters of our experimental setup
Scale = 0.3 #scale of our recording, [mkm/px]

with open(filename, 'r') as file:
    lines = file.readlines()

coords = []

for line in lines:
    values = line.strip().split()
    converted_values = [float(value) for value in values]
    coords.append(converted_values)

file.close()

coords =np.array(coords)
#print(coords)
rows_number = coords.shape[0]
columns_number = coords.shape[1]
'''
columns_data = zip_longest(*coords)

with open (csv_d, 'w') as file:
    writer = csv.writer(file)
    writer.writerows(columns_data)

# Calculating displacements
def calculate_displacement(x1, x2):
    return abs(x2 - x1)

def calculate_displacements(column):
    displacements = []
    for i in range(columns_number - 1):
        x1 = column[i]
        x2 = column[i + 1]
        displacement = calculate_displacement(x1, x2) * Scale #in [mkm]
        displacements.append(displacement)
    return displacements

for i in range(columns_number):
    current_column = [row[i] for row in coords] #reading data from every column
#    print(current_column)
    displacements = calculate_displacements(current_column)# Calculate displacements between neighboring points
#    print(displacements)
    with open(displ_file, 'a') as result_file1:
       for displacement in displacements:
          result_file1.write(''.join(str(displacement)))
          result_file1.write('\n')
#       result_file1.write('\t')

result_file1.close()
'''
displ_list=[]
for i in range(columns_number):
    column_data = [row[i] for row in coords]
    displacements = np.abs(np.diff(column_data))
    displ_list.append(displacements)
    print(displ_list)

np.savetxt(displ_list, delimiter='\t', fmt='%f')

